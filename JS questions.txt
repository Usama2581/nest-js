*****************************SWAPPING VARIABLES**********************************
let a = 10, b = 3
// console.log(a,b)
 a = a + b   // 13
 b = a - b // 10
 a = a - b
 console.log(a,b)


****************CALL BACK & HIGHER ORDER FUNCTION******************
a function which takes another function as argument or return a function is called higher order function
example: map, filter, forEach

a function which is called inside the body of another function known as call back 


***************Check vowel and consonent in string**************************
const name = 'usama'
let vowels = 0, consonent = 0

for(let i=0; i<name.length; i++) {
    if(name[i] === 'a' || name[i] === 'e' || name[i] === 'i' || name[i] === 'o' || name[i] === 'u') {
        vowels++
    }
    else{
        consonent++
    }
}
console.log(vowels)
console.log(consonent)

****************Reverse the integer**********************
const num = -12
let newNum = num.toString().split('').reverse().join('')
if(newNum.endsWith('-')) {
    newNum = `-${newNum}`
    let newNumm =  parseInt(newNum)
console.log(newNumm)
}


********************** == vs === ****************************
== used when both the values are same not datatype
=== used when the both datatypes are same not value 

************NODE JS************************
1. 3 things are main in architechture call stack, nide api, callback queue
2. node api and callback queue will not be used every time
3. call stack is used every time

******CALL STACK*********************
It register the function and according to serise it execute them. lifo



*****Node api**************
pogram is executed in call stack if program has any function which is inheited from c node js is made up of c languge it store in nodeapi than it move to call backe queue one by one after the executonj of progam it exected in call stack 

****VAR*****
VAR has global scope if declared it can be found outside block but cannot be used function it declared in function

*****LET AND CONST*******
They are introduced in es6 both has block scope cannot be used outside block

to access a variable outside block or function remove keyword let, const or var e.g a = 10 it can be used outside



***********THREADING****************
node js is single thread meaning that code is executed line after line it is synchronous whereas multi thread means program can run in parallel it is asynch

JavaScript is inherently single-threaded and synchronous. However, it supports asynchronous programming through features like callbacks, Promises, and async/await. 


*********DOCKER*********

1. image is tempkate of project and container is running instace of image
2.image is readonly it cant be updated
3. container helps to run image
4. dokcer hub is an anline tool while docker desktop is app
5. *.txt used to ignore all files from creating image that have txt extension add it in .dockerignore file
6. image running in container can't be deleted
7. docker image rm image-name to delete image by terminal
8. 


******CONSTRUCTOR**********
Its a special method that is automatically called when object is created

******SOCKET********

// .on is used to catch event
// .emit is used to create custom event

// --reserved server events---
// connecton, disconnect, reconnect, ping, join, leave, message

// --reserved client side events---
// connect, connect_error, connect_timeout, reconnect


// -----BroadCasting----------
//  how many users are connected on server and to give message to them
// io.socket.emit is used to broadcast globally, notification sent to all users
//  socket.broadcast.emit used to give message to all except new connected user or user who trigger event 





